// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TransactionStatus {
  PENDING
  CONFIRMED
}

enum OrderStatus {
  UNPAID
  PAYMENT_PENDING
  PAYMENT_CONFIRMED
  IMAGE_ORDINALS_PENDING
  IMAGE_ORDINALS_CONFIRMED
  HTML_ORDINALS_PENDING
  READY
}

model Order {
  id                    Int         @id @default(autoincrement())
  created_at            DateTime    @default(now())
  updated_at            DateTime    @updatedAt
  // order id from ordinalsbot
  ordinals_bot_order_id String?     @unique @db.VarChar(255)
  // taproot address receiving the ordinal
  receiver_address      String
  update_token          String      @unique @db.VarChar(255)
  status                OrderStatus @default(UNPAID)
  payment_tx_id         String?     @unique @db.VarChar(255)
  image_ordinals        Ordinal[]   @relation(name: "image_files")
  html_ordinals         Ordinal[]   @relation(name: "html_files")
  quantity              Int
  // e.g. 0
}

model Ordinal {
  id                   Int               @id @default(autoincrement())
  created_at           DateTime          @default(now())
  updated_at           DateTime          @updatedAt
  name                 String            @db.VarChar(255)
  hash                 String            @db.VarChar(255)
  type                 String            @db.VarChar(255)
  size                 Int
  duration             Int
  tx_id                String?           @unique @db.VarChar(255)
  tx_status            TransactionStatus @default(PENDING)
  ordinal_index        Int?
  image_files_order_id Int?
  image_files_order    Order?            @relation(name: "image_files", fields: [image_files_order_id], references: [id])
  html_files_order_id  Int?
  html_files_order     Order?            @relation(name: "html_files", fields: [html_files_order_id], references: [id])
}
